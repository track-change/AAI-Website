---
interface CTA {
  text: string;
  action: string;
}

const { ctas = [] } = Astro.props;
---

<div class="CTA-wrapper">
  {
    ctas.map((cta: CTA) => (
      <div class="CTA-outstanding">
        <h2>{cta.text}</h2>
        <a class="CTA-link">
          <h2 class="action-text">{cta.action}</h2>
        </a>
      </div>
    ))
  }
</div>

<style type="scss">
  .CTA-wrapper {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 80px;
    width: fit-content;
    margin: 0 auto;
  }

  .CTA-outstanding {
    border-top: 1px solid var(--black, #000);
    padding: 0 40px;

    display: flex;
    width: 100%;
    height: 500px;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;

    flex-shrink: 0;


  .CTA-link {
    border-bottom: 0.4rem solid black;
    display: inline;
    align-items: flex-start;
    gap: 0.625rem;

    @media screen and (max-width: 1024px) {
      border-bottom: 0.2rem solid black;
    }

    .action-text {
      display: inline;
    }
  }

  .CTA-link::after {
    content: url(/arrow-black.svg);
    padding-top: 1.25rem;
    display: inline-block;
    vertical-align: top;
  }

}
</style>
