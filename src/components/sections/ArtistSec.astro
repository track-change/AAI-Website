---
import Layout from "../../layouts/Layout.astro";
import SectionLayout from "../../layouts/SectionLayout.astro";
import { getArtists } from "../../data/api";
import Collapsible from "../Collapsible.astro";
import SideTab from "../SideTab.astro";
import SecHeader from "../SecHeader.astro";
import CTA from "../CTA.astro";
import { urlFor } from "../../utils/image";

let artists = await getArtists();
artists = artists.map((artist) => ({
  ...artist,
  imageUrl: artist.image ? urlFor(artist.image).url() : null,
}));
---

<SectionLayout className="artist-directory" backGround="var(--white)">
  <h2 class="title">Artists Directory</h2>

  <div class="filters caption">
    <ul>
      <li>Sort by</li>
      <li>
        <ul>
          <li>Most recent to oldest</li>
          <li>Oldest to most recent</li>
          <li>Alphabetical</li>
        </ul>
      </li>
    </ul>
    <ul>
      <li>Filter by year of participation</li>
      <li>
        <ul>
          <li>All</li>
          <li>2023</li>
          <li>2022</li>
          <li>2021</li>
        </ul>
      </li>
    </ul>

    <ul>
      <li>Filter by last name initials</li>
      <li>
        <ul>
          <li>A</li>
          <li>B</li>
          <li>C</li>
          <li>D</li>
          <li>E</li>
          <li>F</li>
        </ul>
      </li>
    </ul>
  </div>

  <div x-data="pagination">
    <ul class="list">
      <template x-for="artist in paginatedData" :key="artist._id">
        <li class="artist-list-item">
          <a :href="`/artists/${artist.slug.current}`">
            <h2 x-text="artist.name"></h2>
          </a>
          <img class="artist-thumbnail" :src="artist.imageUrl" alt="" />
        </li>
      </template>
    </ul>

    <div class="pagination-controls">
      <button @click="prevPage()" :disabled="currentPage === 1">Previous</button
      >
      <span x-text="currentPage"></span>
      <button @click="nextPage()" :disabled="disableNext">Next</button>
    </div>
  </div>

  <CTA type="text" text="Load more" />

  <SecHeader title="Artists FAQ" />
  <div class="caption FAQ">
    Asian Arts Initiative has supported hundreds of budding, emergent and
    mid-career artists into local and global prominence. We publish Calls for
    Artists for thematic seasons several times a year, and provide opportunities
    for community-based artist residencies, as well as low and no cost studio
    and performance rental spaces. Here are some common and Frequently Asked
    Questions (FAQ).
  </div>
  <Collapsible />
</SectionLayout>

<style lang="scss">
  .filters,
  .filters > *,
  .filters > * > *,
  .filters > * > * > *,
  .filters > * > * > * > * {
    display: flex;
    gap: 1rem;
    color: var(--darkGray);
    font-size: var(--caption-font-size);
  }
  .filters {
    justify-content: space-between;
  }
  .filters > * {
    flex-direction: column;
  }
  .list {
    padding: 4rem 0;
    display: flex;
    flex-direction: column;
  }
  .artist-list-item:last-child {
    border-bottom: 1px solid var(--black);
  }
  .artist-list-item {
    border-top: 1px solid var(--black);
    padding: 0.5rem 0;
    cursor: pointer;

    .artist-thumbnail {
      position: absolute;
      display: none;
      width: 300px;
      height: auto;
      pointer-events: none;
    }
  }

  .FAQ {
    max-width: 800px;
    margin: 10rem auto;
  }
</style>

<script async define:vars={{ artists }}>
  document.addEventListener("alpine:init", () => {
    Alpine.data("pagination", () => ({
      currentPage: 1,
      itemsPerPage: 10,
      disableNext: false,
      get paginatedData() {
        const start = (this.currentPage - 1) * this.itemsPerPage;
        const end = start + this.itemsPerPage;
        return artists.slice(start, end);
      },
      nextPage() {
        this.currentPage++;
        this.currentPage * this.itemsPerPage >= artists.length
          ? (this.disableNext = true)
          : (this.disableNext = false);
      },
      prevPage() {
        if (this.currentPage > 1) this.currentPage--;
      },
    }));
  });
  const listItems = document.querySelectorAll(".artist-list-item");
  const thumbnails = document.querySelectorAll(".artist-thumbnail");

  window.addEventListener("scroll", () => {
    let scrollY = window.scrollY;

    listItems.forEach((item, index) => {
      item.addEventListener("mouseenter", (e) => {
        // const itemPosition = item.getBoundingClientRect();
        item.style.color = "var(--orange)";
        thumbnails[index].style.display = "block";
        thumbnails[index].style.left = `${e.clientX}px`;
        thumbnails[index].style.top = `${e.clientY + scrollY}px`;
      });

      item.addEventListener("mousemove", (e) => {
        thumbnails[index].style.left = `${e.clientX}px`;
        thumbnails[index].style.top = `${e.clientY + scrollY}px`;
      });

      item.addEventListener("mouseleave", () => {
        item.style.color = "var(--black)";
        thumbnails[index].style.display = "none";
      });
    });
  });
</script>
