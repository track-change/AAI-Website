---
import SecHeader from "../../components/SecHeader.astro";
import SectionLayout from "../../layouts/SectionLayout.astro";
import { getPeople, getPersonByRef } from "../../data/api";
import { urlFor } from "../../utils/image";
import { PortableText } from "astro-portabletext";
import AboutLayout from "../../layouts/AboutLayout.astro";
const people = await getPeople();

const board = await Promise.all(
  people.boardOfDirectors.map((block) => getPersonByRef(block._ref))
);
const staff = await Promise.all(
  people.staff.map((block) => getPersonByRef(block._ref))
);
---
<AboutLayout
pageTitle={people.title}
currentIndex={2}
>  
<SectionLayout
  backGround="var(--white)"
  textColor="var(--black)"
  className="people"
  barbaName={people.title}
>
  <div class="title">
    <h1>{people.title}</h1>
  </div>

  <div class="banner">
    {
      people.coverImage.asset && (
        <img
          class="cover-image"
          src={urlFor(people.coverImage.asset).url()}
          alt={people.coverImage.alt}
        />
      )
    }
    <PortableText value={people.body} />
  </div>
  <SecHeader title="Board of Directors" />

  <div class="list-profile">
    {
      board.map((entry) => (
        <div class="item-profile">
          <div class="profile-title">
            <p>{entry.name}</p>
            {entry.affiliations ? (
              <em class="caption"> {entry.affiliations} </em>
            ) : null}
          </div>

          <PortableText value={entry.jobTitle} class="caption" />
        </div>
      ))
    }
  </div>
  <SecHeader title="Staff" />

  <div class="list-staff">
    {
      staff.map((staff) => (
        <div class="item-profile is-collapsed">
          {staff.profileImage ? (
            <img
              src={urlFor(staff.profileImage).url()}
              alt={staff.name}
              class="profile-image"
            />
          ) : null}

          <div class="profile-title">
            <p>{staff.name}</p>
            <div class="caption">{staff.pronouns}</div>

            <div class="caption">
              {staff.role}
              {staff.ext && `| ${staff.ext}`}
            </div>

            <div class="profile-bio">
              <PortableText value={staff.bio} />
            </div>
          </div>
        </div>
      ))
    }
  </div>
</SectionLayout>
</AboutLayout>

<style lang="scss">
  .list-profile {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 100px;
    max-width: var(--inner-max-width);
    margin: var(--l-margin) auto;

    .item-profile {
      display: flex;
      flex-direction: column;
      gap: var(--s-margin);

      .profile-bio {
        display: block;
      }
    }
  }
  .list-staff {
    display: flex;
    flex-wrap: wrap;
    gap: var(--s-margin);
    width: fit-content;

    .item-profile {
      max-width: 100%;
      height: fit-content;
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: var(--s-margin);
      padding: calc(2 * var(--l-margin)) 0;

      .profile-image {
        object-fit: cover;
        aspect-ratio: 2 / 3;
        cursor: pointer;
      }
      .profile-bio {
        max-width: var(--inner-max-width);
        margin-top: 2em;
      }
    }
  }
  .is-collapsed {
    max-width: calc((100% - 2 * var(--s-margin))/3) !important;
    grid-template-columns: repeat(1, 1fr) !important;
    .profile-bio {
      display: none !important;
    }
  }
</style>
<script async>
  const profiles = document
    .querySelector(".list-staff")
    .querySelectorAll(".item-profile");

  profiles.forEach((p) => {
    const image = p.querySelector(".profile-image");
    const bio = p.querySelector(".profile-bio");
    image.addEventListener("click", () => {
      bio.classList.toggle("is-hidden");
      p.classList.toggle("is-collapsed");
      p.scrollIntoView({
        behavior: "smooth",
        block: "start",
        inline: "nearest"
      })
    });
  });
</script>
