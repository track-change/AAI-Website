---
import type { InferGetStaticParamsType } from "astro";
import SecHeader from "../../../components/SecHeader.astro";
import { PortableText } from "astro-portabletext";
import VenueLayout from "../../../layouts/VenueLayout.astro";
import { getVenue, getVenueBySlug } from "../../../data/api";
import { urlFor } from "../../../utils/image";

export async function getStaticPaths() {
  const education = await getVenue();
  return education.map((edu) => ({
    params: { slug: edu.slug.current },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;

const venue = await getVenueBySlug(slug);
---

<VenueLayout
  pageTitle={venue.name}
  bannerSrc={venue.coverImage ? urlFor(venue.coverImage).url() : ""}
  ctas={venue.cta}
  frontCaptions={venue.frontCaptions}
>
  <section class="banner">
    <PortableText value={venue.description} />
  </section>
<SecHeader title="Virtual Tour" />
  {
    venue.matterport && (
      <div class="matterport">

        <iframe
          src={venue.matterport}
          frameborder="0"
          allowfullscreen
          allow="xr-spatial-tracking"
        />
      </div>
    )
  }
</VenueLayout>
<style lang="scss">
  .matterport {
    padding: var(--l-margin);
    display: flex;
    align-items: center;
    justify-content: center;
    iframe {
      width: 853px;
      height: 480px;
      @media screen and (max-width: 1024px) {
        width: 600px;
        height: 338px;
      }
      @media screen and (max-width: 680px){
        width: 390px;
        height: 220px;
      }
    }
  }
</style>
