---
import Layout from "../../layouts/Layout.astro";
import SideTab from "../../components/SideTab.astro";
import SecHeader from "../../components/SecHeader.astro";
import { urlFor } from "../../utils/image";
import { getEducations, getEducationPage } from "../../data/api";
import type { Education } from "../../data/types";

const educations = await getEducations();
const educationIntro = await getEducationPage()
---
<Layout title="Education">
  <div data-top>
    <article data-wrapper>
      <SideTab text="Education" href="#" style="department" classes="is-major"/>
      <main data-main>
        <div class="intro-sec" style="background-color:black; color:white">
          <div class="body-copy">
            {
              educationIntro.content.map(
                (entry) =>
                  entry._type === "body" ? (
                    <p class="text">{entry.value}</p>
                    // <PortableText value={entry.value}></PortableText>
                  ) : entry._type === "subheading" ? (
                    <SecHeader color="white" title={entry.value} />
                  ) : entry._type === "image" ? (
                    <div>
                      <img
                        class="inline-img"
                        src={entry.asset ? urlFor(entry.asset).url() : ""}
                        alt={entry?.alt}
                      />
                      <captio class="small-caption">{entry?.caption}</captio>
                    </div>
                  ) : null // You might want to handle other cases or return null for unrecognized types
              )
            }
            </div>
        </div>
      </main>
{
  educations
    .sort((a, b) => (Number(a.order) - Number(b.order))) // Sort based on education.order
    .map((education: Education) => (
      <SideTab
        text={education.title}
        style="subpage"
        shadow="right"
        backGround="var(--white)"
        href={`/education/${education.slug.current}`}
      />
    ))
}
    </article>
  </div>
</Layout>

<style type="scss">
  [data-wrapper] {
    width: 100vw;
    min-height: 100vh;

    display: flex;
    flex-direction: row;
    position: sticky;
    top: 45px;
    left: 0;

    // background-color: var(--black);

    [data-main] {
      width: calc(100vw - 4rem);
      height: 100vh;

      position: relative;
      display: flex;
      flex-direction: column;
      gap: var(--s-margin);
      flex: 1;
      width: 100%;
      padding: var(--l-margin);
      background-color: var(--black);
      color: var(--textColor);

      .body-copy {
        max-width: var(--inner-max-width);
      }
      
      .department,
      .subpage {
        flex-shrink: 0;
        position: sticky;
        top: 44px;
        cursor: pointer;
        z-index: 10;
      }

      .subpage {
        // transition: visibility 0.4s linear;
        // display: none;
        background-color: var(--white);
      }

      .is-shown {
        visibility: visible;
        animation: fadeIn 0.4s linear forwards;
      }

      .imports {
        background-color: red;
      }
        // .list {
      //   display: grid;
      //   grid-template-columns: 1fr 1fr 1fr;
      //   white-space: nowrap;
      //   position: relative;
      //   width: 100%;

      //   .list-item {
      //     writing-mode: vertical-rl;
      //     text-orientation: mixed;
      //     width: 100%;
      //     box-shadow: -10px 0px 14px 0px rgba(0, 0, 0, 0.2);
      //     display: flex;
      //     align-items: flex-end;
      //     padding: 40px;
      //   }
      // }
    }
  }
  // [data-panel] {
  //   transform: rotate(90deg);
  //   display: block;
  // }
</style>

<script async></script>
