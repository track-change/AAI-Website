---
import Layout from "../../../layouts/Layout.astro";
import { getPrograms } from "../../../data/api";
import SideTab from "../../../components/SideTab.astro";
import CTA from "../../../components/CTA.astro";
import { urlFor } from "../../../utils/image";
import SecHeader from "../../../components/SecHeader.astro";
import { formatDateRange } from "../../../utils/dateFormatting.js";

const programs = await getPrograms();
---

<Layout title="Current Programs">
  <div data-top>
    <article id="none" data-wrapper>
      <SideTab text="Programs" href="/programs/" style="department" />

      <main data-main>
        <h2 class="title">Current & Upcoming</h2>

        <section data-exhibits>
          <h6>On View</h6>
          <ul class="list">
            {
              programs.map((program) => (
                <Fragment key={program._id}>
                  {program.type === "exhibition" && (
                    <li class="list-item">
                      <a data-link href={`/programs/${program.slug.current}`}>
                        <img src={urlFor(program.coverImage).url()} />
                        <h4>{program.name}</h4>

                        <ul class="caption">
                          <li class="grayout">{program.type}</li>
                          <li>
                            {formatDateRange(
                              `${program.startDateTime}—${program.endDateTime}`
                            )}
                          </li>
                        </ul>
                      </a>
                    </li>
                  )}
                </Fragment>
              ))
            }
          </ul>
        </section>
        <section data-events>
          <SecHeader title="Upcoming Events" />

          <div>Calendar</div>

          <ul class="list">
            {
              programs.map((program) => (
                <Fragment key={program._id}>
                  {program.type === "event" && (
                    <li class="list-item">
                      <a data-link href={`/programs/${program.slug.current}`}>
                        <img src={urlFor(program.coverImage).url()} />
                        <h4>{program.name}</h4>
                        <ul class="caption">
                          <li class="grayout">
                            {program.eventTypes &&
                              program.eventTypes.map((eventType) => (
                                <span>{eventType}</span>
                              ))}
                          </li>
                          <li>
                            {formatDateRange(
                              `${program.startDateTime}—${program.endDateTime}`
                            )}
                          </li>
                        </ul>
                      </a>
                    </li>
                  )}
                </Fragment>
              ))
            }
          </ul>
        </section>
      </main>

      <SideTab text="Past Seasons" href="/programs/past" style="subpage" />
    </article>
  </div>
</Layout>

<style type="scss">
  [data-top] {
    [data-wrapper] {
      width: 100vw;
      min-height: 100vh;

      display: flex;
      flex-direction: row;
      position: sticky;
      top: 45px;
      left: 0;

      [data-main] {
        padding: 40px;
        width: 100%;

        display: flex;
        flex-direction: column;

        .title {
          margin-bottom: 200px;
        }

        .filters,
        .filters > * > * > * {
          display: flex;
          justify-content: space-between;
          gap: 1rem;
          color: var(--darkGray);
        }
        .list {
          padding: 4rem 0;
          display: flex;
          flex-direction: row;
          flex-wrap: wrap;
          justify-content: space-around;
          align-items: center;
          gap: 4rem;

          .list-item {
            max-width: 45%;
            // display: flex;
            // flex-direction: column;
            // text-align: center;
            [data-link] {
              display: flex;
              flex-direction: column;
              // align-items: center;
              gap: 0.5rem;
              text-align: center;
              .grayout {
                margin-bottom: 0.5rem;
                color: var(--darkGray);
                text-transform: capitalize;
              }
            }
          }
        }
      }
    }
  }
</style>
<script async></script>
