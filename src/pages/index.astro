---
import Layout from "../layouts/Layout.astro";
import SectionLayout from "../layouts/SectionLayout.astro";
import ProgramCard from "../components/ProgramCard.astro";
import MediaCard from "../components/MediaCard.astro";
import TicketCard from "../components/TicketCard.astro";
import EducationCard from "../components/EducationCard.astro";
import {
  getHome,
  getBannerByRef,
  getEducationByRef,
  getMediaByRef,
  getTicketsByRef,
} from "../data/api";
import { PortableText } from "astro-portabletext";
import CTA from "../components/CTA.astro";
import { urlFor } from "../utils/image";
import type { Banner, AboutUsElement, Ticket } from "../data/types";

const homeData = await getHome();
const hpPrograms = homeData.programs;
const aboutUsSec = await Promise.all(
  homeData.aboutUs.map((banner) => {
    if (banner._type === "banner") {
      return getBannerByRef((banner as Banner)._ref);
    } else {
      return banner;
    }
  })
);

const educationBlocks = await Promise.all(
  homeData.educations.map((block) => getEducationByRef(block._ref))
);
const mediaBlocks = await Promise.all(
  homeData.mediaLibrary.map((block) => getMediaByRef(block._ref))
);

const tickets = await Promise.all(
  homeData.tickets.map((block) => getTicketsByRef(block._ref))
);

const banners = await Promise.all(
  homeData.banners.map((block) => getBannerByRef((block as Banner)._ref))
);
---

<Layout title="Homepage">
  <SectionLayout className="program">
    <h1>Programs: On Now</h1>
    <div class="program-carousel disable-scrollbars">
      {hpPrograms.map((program) => <ProgramCard pgRef={program._ref} />)}
    </div>
    <div class="description">
      <p class="caption event-type">
        <span></span>
      </p>
      <h4 class="program-card-title"></h4>
      <p class="caption date"></p>
    </div>

    <!-- <CTA type="default" text="See All Programs" linkHref="/programs" /> -->
  </SectionLayout>

  <section class="blurb">
    <p id="overview">About AAI</p>
    <PortableText value={homeData.content} />
    <CTA type="default" text="More about us" linkHref="/about" />
  </section>

  <SectionLayout className="about">
    <ul class="about-list">
      {
        aboutUsSec.map((banner) => (
          <div class="card-wrapper">
            {banner._type === "banner" ? (
              <CTA
                type="outstanding"
                action
                linkText={(banner as Banner)?.link.text}
                linkHref={(banner as Banner)?.link.value}
              />
            ) : (
              <img
                src={
                  (banner as AboutUsElement).asset
                    ? urlFor((banner as AboutUsElement).asset).url()
                    : ""
                }
                alt="about us"
              />
            )}
          </div>
        ))
      }
    </ul>
  </SectionLayout>

  <SectionLayout className="education">
    <h2>Education</h2>
    <ul class="edu-list disable-scrollbars">
      {
        educationBlocks.map((block) => (
          <div class="card-wrapper">
            <EducationCard education={block} />
          </div>
        ))
      }
    </ul>
    <CTA type="default" text="See All Workshops" linkHref="/education" />
  </SectionLayout>

  <SectionLayout backGround="var(--gray)" className="media-library">
    <h2>Media Library</h2>
    <ul class="media-list">
      {
        mediaBlocks.map((block) => (
          <div class="card-wrapper">
            <MediaCard media={block} />
          </div>
        ))
      }
    </ul>
    <CTA
      type="default"
      text="See all media archive"
      linkHref="/archive#media"
    />
  </SectionLayout>
  <SectionLayout
    backGround="var(--black)"
    textColor="var(--white)"
    className="ticket"
  >
    <h2>Tickets</h2>
    <ul class="ticket-list">
      {
        tickets.map((ticket) => (
          <li class="card-wrapper">
            <TicketCard ticket={ticket} />
          </li>
        ))
      }
    </ul>
    <CTA
      type="default"
      invert
      text="See all ticketed Events"
      linkHref="/tickets"
    />
  </SectionLayout>

  <SectionLayout>
    <div class="banners">
      {
        banners.map((banner) =>
          banner.info ? (
            banner.link ? (
              <CTA
                type="outstanding"
                action
                text={banner.info}
                linkText={banner.link.text}
                linkHref={banner.link.value}
              />
            ) : (
              <CTA type="outstanding" text={banner.info} />
            )
          ) : banner.link ? (
            <CTA
              type="outstanding"
              action
              linkText={banner.link.text}
              linkHref={banner.link.value}
            />
          ) : null
        )
      }
    </div>
  </SectionLayout>

  <style lang="scss" is:global>
    body {
      display: flex;
      flex-direction: column;
      transition: background-color 300ms var(--ease);
    }
    main.program,
    main.education,
    main.ticket,
    main.media-library {
      display: flex;
      flex-direction: column;
      align-items: center;
      h1,
      h2 {
        width: 100%;
      }
    }
    .program-carousel {
      z-index: 1;
      display: flex;
      height: fit-content;
      max-width: 100vw;
      overflow: auto;
      scroll-behavior: smooth;
      scroll-snap-type: x mandatory;
      align-items: center;
      padding: 0;
    }

    .blurb {
      margin: 80px auto;
      width: 100%;
      padding: calc(2 * var(--l-margin));
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      transition: all 500ms ease-in-out;
      gap: var(--h2-font-size);

      p {
        font-size: var(--h2-font-size);
        line-height: 105%;
        max-width: 18em;

        a {
          font-size: var(--h2-font-size);
          line-height: 90%;
          height: 100%;
          // display: inline-block;
          transition: all 100ms ease-out;

          &:hover {
            transform: translateY(-8%);
            color: white;
            cursor: ne-resize;
          }
        }
      }
    }
    .about-list,
    .banners {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(2, 1fr);
      gap: var(--l-margin);

      .card-wrapper {
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    .edu-list {
      max-width: 100%;
      overflow-x: scroll;
      display: flex;
      flex-wrap: nowrap;
      gap: var(--s-margin);
      flex-shrink: 0;
    }
    .media-list {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: var(--l-margin);

      @media screen and (max-width: 768px) {
        grid-template-columns: repeat(2, 1fr);
      }
    }

    .ticket-list {
      width: 100%;
      margin: var(--l-margin);
      display: flex;
      flex-direction: column;
      .card-wrapper {
        border-bottom: 1px solid white;
      }
      .card-wrapper:first-child {
        border-top: 1px solid white;
      }
    }

    .centered {
    }

    .description {
      text-align: center;
      transition: opacity 0.5s;

      .caption {
        line-height: 1;
      }
      .program-card-title {
        max-width: 24em;
        line-height: 100%;
      }
      .card-img {
        max-width: var(--inner-max-width);
        max-height: 600px;
        height: auto;
        object-fit: contain;
      }
    }
  </style>
</Layout>

<script async>
const carousel = document.querySelector(".program-carousel");
const cards = document.querySelectorAll(".program-carousel-container");
const blurb = document.querySelector(".blurb");
const bodyTag = document.querySelector("body");
const blurbTop = blurb.offsetTop;
const blurbBottom = blurbTop + blurb.offsetHeight;

const description = document.querySelector(".description");
const eventTypeShown = description.querySelector(".event-type");
const titleShown = description.querySelector("h4");
const dateShown = description.querySelector(".date");

cards[0].classList.add("centered");

let index = 1;
function recenter() {
  if (index < cards.length) {
    document.querySelector(".centered").classList.remove("centered");
    cards[index].classList.add("centered");
    index++;
  } else {
    index = 0;
    document.querySelector(".centered").classList.remove("centered");
    cards[index].classList.add("centered");
    index++;
  }
}

function updateText() {
  let eventType = document.querySelector(
    ".centered .description-hidden .event-type"
  ).textContent;
  let title = document.querySelector(
    ".centered .description-hidden .program-card-title"
  ).textContent;
  let date = document.querySelector(
    ".centered .description-hidden .date"
  ).textContent;
  eventTypeShown.textContent = eventType;
  titleShown.textContent = title;
  dateShown.textContent = date;
}

let currentPos = 0;

function scrollCarousel() {
  currentPos += window.innerWidth;

  window.addEventListener("resize", () => {
    currentPos += window.innerWidth;
  });

  if (currentPos > carousel.scrollWidth - window.innerWidth) {
    currentPos = 0;
  }

  carousel.scrollTo(currentPos, 0);
}

updateText();

setInterval(() => {
  scrollCarousel();
  recenter();
  updateText();
}, 4000);

function handleScroll() {
  const pixels = window.scrollY;
  const windowHeight = window.innerHeight;

  if (
    blurbTop - 0.5 * windowHeight <= pixels &&
    blurbBottom > pixels + 0.5 * windowHeight
  ) {
    bodyTag.style.backgroundColor = "var(--orange)";
  } else {
    bodyTag.style.backgroundColor = "";
    blurb.style.color = "";
  }
}

window.addEventListener("scroll", handleScroll);
</script>
