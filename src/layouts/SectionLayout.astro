---
import "../scss/main.scss";

interface Prop {
  backGround?: string;
  textColor?: string;
  className?: string;
}

const { backGround, textColor, className } = Astro.props as Prop

---

<main class={className}>
  <slot />
</main>

<style lang="scss" is:global define:vars={{ backGround, textColor }}>
  html {
    font-family: system-ui, sans-serif;
    background: var(--white);
    background-size: 224px;
  }
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }


  main {
    display: flex;
    flex-direction: column;
    gap: var(--s-margin);
    flex: 1;
    width: 100%;
    padding: var(--l-margin);
    background-color: var(--backGround);
    color: var(--textColor);
  }

  .banner {
    padding: 6.25rem auto;
    gap: 1.25rem;

    @media screen and (max-width: 24.375rem) {
      padding: 2.5rem auto;
    }
  }

  .text,
  .inline-img {
    max-width: 50rem;
    width: 100%;

    @media screen and (max-width: 64rem) {
      max-width: 40rem;
    }
    @media screen and (max-width: 48rem) {
      max-width: 30rem;
    }
  }

  .CTA-wrapper {
    width: 100%;
    max-width: 800px;

    @media screen and (max-width: 64rem) {
      max-width: 40rem;
    }
    @media screen and (max-width: 48rem) {
      max-width: 30rem;
      // margin: 0 16px;
    }

    @media screen and (max-width: 35.5rem) {
      background-color: red;
      width: calc(100% - 4.4rem);
      // margin: 0 16px;
    }
    @media screen and (max-width: 24.375rem) {
      width: calc(100% - 32px);
      // margin: 0 16px;
    }

    display: grid;
    grid-template-columns: 1fr 1fr;
    margin: 6.25rem auto;

    * {
      width: 100%;
      height: 100%;
      border: none;
      box-shadow: 0 0 0 1px var(--black);
    }
  }
</style>
