---
import BasicLayout from "./Layout.astro";
import SideTab from "../components/SideTab.astro";

const aboutSec = [
  { text: "Contact Us", color: "var(--yellow)" },
  { text: "Support", color: "var(--purple)" },
  { text: "People", color: "var(--white)" },
  { text: "Opportunities", color: "var(--peach)" },
  { text: "Partnerships", color: "var(--mint)" },
];

interface Props {
  pageTitle: string;
  currentIndex: number;
}

const { pageTitle, currentIndex } = Astro.props as Props;

const generateAboutPath = (item: string) => {
  const lowercasedItem = item.toLowerCase();
  return `/about/${lowercasedItem
    .replace(/\s+/g, "-")
    .replace(/[^a-z0-9-]/g, "")}`;
};
---

<BasicLayout title={pageTitle}>
  <div class="top desktop">
    <SideTab text="About" href="/about/" style="department" />

    {
      aboutSec
        .filter((_, index) => index < currentIndex)
        .map((item, index) => (
          <SideTab
            text={item.text}
            style="subpage"
            shadow="left"
            backGround={item.color}
            href={generateAboutPath(item.text)}
          />
        ))
    }
    <slot />

    <!-- Render SideTabs after <main> for education.order > currentIndex  -->
    {
      aboutSec
        .filter((_, index) => index > currentIndex)
        .map((item, index) => (
          <SideTab
            text={item.text}
            style="subpage"
            shadow="right"
            backGround={item.color}
            href={generateAboutPath(item.text)}
          />
        ))
    }
  </div>
  <div class="top mobile">
    <SideTab text="About" href="/about/" style="department" />
    <slot />
    <div class="tabBar">
      {
        aboutSec
          .filter((_, index) => index < currentIndex)
          .map((item, index) => (
            <SideTab
              text={item.text}
              style="subpage"
              shadow="bottomleft"
              backGround={item.color}
              href={generateAboutPath(item.text)}
            />
          ))
      }
      {
        aboutSec
          .filter((_, index) => index == currentIndex)
          .map((item, index) => (
            <SideTab
              text={item.text}
              style="subpage"
              shadow="none"
              backGround={item.color}
              textColor={item.color}
              href={generateAboutPath(item.text)}
            />
          ))
      }
      {
        aboutSec
          .filter((_, index) => index > currentIndex)
          .map((item, index) => (
            <SideTab
              text={item.text}
              style="subpage"
              shadow="topleft"
              backGround={item.color}
              href={generateAboutPath(item.text)}
            />
          ))
      }
    </div>
  </div>
</BasicLayout>

<style lang="scss" is:global>
  html {
    font-family: system-ui, sans-serif;
    background: var(--white);
    background-size: 224px;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  // Side Tab Area
  .top {
    display: flex;
  }
  main {
    flex: 1;
  }
  .mobile {
    display: none !important;
  }

  @media screen and (max-width: 64rem) {
    .desktop {
      display: none !important;
    }
    .mobile {
      display: flex !important;
    }
    .top {
      display: flex;
      flex-direction: row;
    }
    .tabBar {
      display: flex;
      flex-direction: column;
      position: sticky;
      top: 44px;
      height: 100vh;

      a {
        flex: 1;
        overflow: hidden;
        flex-grow: 1;

        div {
          height: 100% !important;
        }
      }
    }
  }

  @media screen and (max-width: 48rem) {
    .desktop {
      display: none !important;
    }
    .mobile {
      display: flex !important;
    }
    .top {
      display: flex;
      flex-direction: row;
    }
    .tabBar {
      display: flex;
      flex-direction: column;
      position: sticky;
      top: 44px;
      height: 100vh;

      a {
        flex: 1;
        overflow: hidden;
        flex-grow: 1;

        div {
          height: 100% !important;
        }
      }
    }
  }
</style>
